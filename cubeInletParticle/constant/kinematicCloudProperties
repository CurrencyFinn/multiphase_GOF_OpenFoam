/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      reactingCloud1Properties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solution
{
    active          true;
    coupled         false;
    transient       yes;
    cellValueSourceCorrection off;
    maxCo           0.3;

    interpolationSchemes
    {
        rho             cell;
        U               cellPoint;
        mu              cell;
    }

    integrationSchemes
    {
        U               Euler;
    }
}

constantProperties
{
    rho0            950;           // particle density (kg/m3)
    //youngsModulus   6e8;   // constant of proportionality relating the deformation to the applied stress for your particles (N/m2)
    //poissonsRatio   0.35;    // ratio of traverse to axial strain for your particles (dimensionless)
    constantVolume  true;
}

subModels
{
    particleForces
    {
        sphereDrag;
        gravity;
        //BrownianMotion;
    }

    injectionModels
    {
        model1
        {
            type patchInjection;
            parcelBasisType fixed; 
            patchName inlet-velocity;
            patch inlet-velocity;            
            U0 (0 0 0);
            nParticle 1;    
            parcelsPerSecond 500;
            sizeDistribution
                    {
                        type        fixedValue;
                        fixedValueDistribution
                        {
                            value   6e-7;
                        }
                    }
            flowRateProfile constant 1;
            massTotal 0;  //Choosing nParticle to be a fixed value, massTotal not used
            SOI 0;
            duration 0.1;
        }
    }

    dispersionModel none;

    patchInteractionModel localInteraction; //none

    localInteractionCoeffs
    {
        patches
        (
            cylinder {
                type stick;
            }

            ".*"
            {
                type escape;  
            }
            // ".*"
            // {
            //     type rebound;  // For Un = normal speed; Ut = tangential speed
            //     e    1;        // e = (Un_reflected / Un_incident)
            //     mu   0;        // mu = [1 - (Ut_reflected / Ut_incident)]
            // }
        );
    }

    surfaceFilmModel none;

    collisionModel none;

    // pairCollisionCoeffs
    // {
    //     maxInteractionDistance  0.006;

    //     writeReferredParticleCloud no;

    //     pairModel pairSpringSliderDashpot;

    //     pairSpringSliderDashpotCoeffs
    //     {
    //         useEquivalentSize   no;
    //         alpha               0.12;
    //         b                   1.5;
    //         mu                  0.52;
    //         cohesionEnergyDensity 0;
    //         collisionResolutionSteps 12;
    //     };

    //     wallModel    wallLocalSpringSliderDashpot;

    //     wallLocalSpringSliderDashpotCoeffs
    //     {
    //         useEquivalentSize no;
    //         collisionResolutionSteps 12;
    //         "cylinder"
    //         {
    //             youngsModulus   1e10;
    //             poissonsRatio   0.23;
    //             alpha           0.12;
    //             b               1.5;
    //             mu              0.43;
    //             cohesionEnergyDensity 0;
    //         }
    //     };
    // }

    radiation off;

    stochasticCollisionModel none;
}

cloudFunctions
{
    particleTracks1
    {
        type            particleTracks;
        trackInterval   5;
        maxSamples      10000000;
        resetOnWrite    yes;
    }
}

// ************************************************************************* //
